{
	"id": "5058bdf05f6b10cddb1cb652c9ae4619",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Journal3.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\n\r\nstruct Author {\r\n    string author_gscholar_uid;\r\n    address author_pub_address;\r\n}\r\n\r\ncontract Journal3 is Ownable{\r\n    // The list of paper's authors to effectively create/credential an .openml ENS that maps author's \r\n    // gscholar uid to public address. That aids in compensation and other indexing usecases\r\n    Author[] authors_gscholar_uid;\r\n\r\n    // This stores the JSON of the research paper's metadata on IPFS\r\n    /*\r\n    metadata = {\r\n        \"paper_title\": \"\",\r\n        \"paper_keywords\": [\"\", \"\", \"\"],\r\n        \"paper_doi\": \"\",\r\n        \"paper_pdf_ipfs\": \"\",\r\n        \"\": \"\"\r\n    }\r\n    */\r\n    string paper_metadata_ipfs_url;\r\n\r\n    mapping(string=>address) references;\r\n\r\n    // Some stuff here to setup an oracle\r\n\r\n    function fetchRawDataMutations() external view returns (string memory mutation_lambda) {\r\n\r\n    }\r\n\r\n    // function calibrateInference() external pure returns (Performance model_perfomance) {\r\n        // Here we will allow people to actually run the model on a given set to get accuracy/recall/F1 data\r\n    // }\r\n\r\n    function setupReplicationEnv() public payable {\r\n        //Here it will generate some JSON response that we will use on our jupyter API call to generate the notebook from a boilerplate\r\n    }\r\n\r\n    function vouchCorrectness() public payable {\r\n        // Here basically we allow people to stake basic ERC-20 or Eth to vouch for the correctness of the inference\r\n    }\r\n\r\n    function generateInference() public payable {\r\n         //\r\n    }\r\n\r\n    // function create_paper_reference() -> converts this paper into a reference that anyother paper can use\r\n    // function set_paper_references() -> adds references into this paper for all other models/papers used as inspiration or for benchmarking\r\n\r\n\r\n\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Journal3.sol": {
				"Journal3": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "fetchRawDataMutations",
							"outputs": [
								{
									"internalType": "string",
									"name": "mutation_lambda",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "generateInference",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "setupReplicationEnv",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vouchCorrectness",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Journal3.sol\":220:1897  contract Journal3 is Ownable{\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_5\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_6)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_7)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"contracts/Journal3.sol\":220:1897  contract Journal3 is Ownable{\r... */\n  jump(tag_8)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_6:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/Journal3.sol\":220:1897  contract Journal3 is Ownable{\r... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Journal3.sol\":220:1897  contract Journal3 is Ownable{\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xd820d0db\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xfe773fca\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_9:\n      dup1\n      0x381b02c9\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x823ffaa2\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Journal3.sol\":1391:1560  function vouchCorrectness() public payable {\r... */\n    tag_2:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      pop\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      stop\n        /* \"contracts/Journal3.sol\":872:969  function fetchRawDataMutations() external view returns (string memory mutation_lambda) {\r... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Journal3.sol\":1192:1383  function setupReplicationEnv() public payable {\r... */\n    tag_6:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      stop\n        /* \"contracts/Journal3.sol\":1568:1633  function generateInference() public payable {\r... */\n    tag_8:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      stop\n        /* \"contracts/Journal3.sol\":1391:1560  function vouchCorrectness() public payable {\r... */\n    tag_11:\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_36\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_37\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_36:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_39\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_40\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_39:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Journal3.sol\":872:969  function fetchRawDataMutations() external view returns (string memory mutation_lambda) {\r... */\n    tag_17:\n        /* \"contracts/Journal3.sol\":928:957  string memory mutation_lambda */\n      0x60\n        /* \"contracts/Journal3.sol\":872:969  function fetchRawDataMutations() external view returns (string memory mutation_lambda) {\r... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Journal3.sol\":1192:1383  function setupReplicationEnv() public payable {\r... */\n    tag_26:\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_45\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_37\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_45:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_47\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_48\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_47:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_50\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_40\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_50:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Journal3.sol\":1568:1633  function generateInference() public payable {\r... */\n    tag_33:\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_53\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_54\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_53:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_55\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_22\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_55:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_56\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_57\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_56:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_62:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_64\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_30:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_67\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":228:347   */\n    tag_67:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_70\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_62\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:605   */\n    tag_71:\n        /* \"#utility.yul\":574:598   */\n      tag_73\n        /* \"#utility.yul\":592:597   */\n      dup2\n        /* \"#utility.yul\":574:598   */\n      tag_74\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":569:572   */\n      dup3\n        /* \"#utility.yul\":562:599   */\n      mstore\n        /* \"#utility.yul\":487:605   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":611:975   */\n    tag_75:\n        /* \"#utility.yul\":699:702   */\n      0x00\n        /* \"#utility.yul\":727:766   */\n      tag_77\n        /* \"#utility.yul\":760:765   */\n      dup3\n        /* \"#utility.yul\":727:766   */\n      tag_78\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":782:853   */\n      tag_79\n        /* \"#utility.yul\":846:852   */\n      dup2\n        /* \"#utility.yul\":841:844   */\n      dup6\n        /* \"#utility.yul\":782:853   */\n      tag_80\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":775:853   */\n      swap4\n      pop\n        /* \"#utility.yul\":862:914   */\n      tag_81\n        /* \"#utility.yul\":907:913   */\n      dup2\n        /* \"#utility.yul\":902:905   */\n      dup6\n        /* \"#utility.yul\":895:899   */\n      0x20\n        /* \"#utility.yul\":888:893   */\n      dup7\n        /* \"#utility.yul\":884:900   */\n      add\n        /* \"#utility.yul\":862:914   */\n      tag_82\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":939:968   */\n      tag_83\n        /* \"#utility.yul\":961:967   */\n      dup2\n        /* \"#utility.yul\":939:968   */\n      tag_84\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":934:937   */\n      dup5\n        /* \"#utility.yul\":930:969   */\n      add\n        /* \"#utility.yul\":923:969   */\n      swap2\n      pop\n        /* \"#utility.yul\":703:975   */\n      pop\n        /* \"#utility.yul\":611:975   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":981:1347   */\n    tag_85:\n        /* \"#utility.yul\":1123:1126   */\n      0x00\n        /* \"#utility.yul\":1144:1211   */\n      tag_87\n        /* \"#utility.yul\":1208:1210   */\n      0x26\n        /* \"#utility.yul\":1203:1206   */\n      dup4\n        /* \"#utility.yul\":1144:1211   */\n      tag_80\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":1137:1211   */\n      swap2\n      pop\n        /* \"#utility.yul\":1220:1313   */\n      tag_88\n        /* \"#utility.yul\":1309:1312   */\n      dup3\n        /* \"#utility.yul\":1220:1313   */\n      tag_89\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":1338:1340   */\n      0x40\n        /* \"#utility.yul\":1333:1336   */\n      dup3\n        /* \"#utility.yul\":1329:1341   */\n      add\n        /* \"#utility.yul\":1322:1341   */\n      swap1\n      pop\n        /* \"#utility.yul\":981:1347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1353:1719   */\n    tag_90:\n        /* \"#utility.yul\":1495:1498   */\n      0x00\n        /* \"#utility.yul\":1516:1583   */\n      tag_92\n        /* \"#utility.yul\":1580:1582   */\n      0x20\n        /* \"#utility.yul\":1575:1578   */\n      dup4\n        /* \"#utility.yul\":1516:1583   */\n      tag_80\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":1509:1583   */\n      swap2\n      pop\n        /* \"#utility.yul\":1592:1685   */\n      tag_93\n        /* \"#utility.yul\":1681:1684   */\n      dup3\n        /* \"#utility.yul\":1592:1685   */\n      tag_94\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":1710:1712   */\n      0x20\n        /* \"#utility.yul\":1705:1708   */\n      dup3\n        /* \"#utility.yul\":1701:1713   */\n      add\n        /* \"#utility.yul\":1694:1713   */\n      swap1\n      pop\n        /* \"#utility.yul\":1353:1719   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1725:1947   */\n    tag_24:\n        /* \"#utility.yul\":1818:1822   */\n      0x00\n        /* \"#utility.yul\":1856:1858   */\n      0x20\n        /* \"#utility.yul\":1845:1854   */\n      dup3\n        /* \"#utility.yul\":1841:1859   */\n      add\n        /* \"#utility.yul\":1833:1859   */\n      swap1\n      pop\n        /* \"#utility.yul\":1869:1940   */\n      tag_96\n        /* \"#utility.yul\":1937:1938   */\n      0x00\n        /* \"#utility.yul\":1926:1935   */\n      dup4\n        /* \"#utility.yul\":1922:1939   */\n      add\n        /* \"#utility.yul\":1913:1919   */\n      dup5\n        /* \"#utility.yul\":1869:1940   */\n      tag_71\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":1725:1947   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1953:2266   */\n    tag_19:\n        /* \"#utility.yul\":2066:2070   */\n      0x00\n        /* \"#utility.yul\":2104:2106   */\n      0x20\n        /* \"#utility.yul\":2093:2102   */\n      dup3\n        /* \"#utility.yul\":2089:2107   */\n      add\n        /* \"#utility.yul\":2081:2107   */\n      swap1\n      pop\n        /* \"#utility.yul\":2153:2162   */\n      dup2\n        /* \"#utility.yul\":2147:2151   */\n      dup2\n        /* \"#utility.yul\":2143:2163   */\n      sub\n        /* \"#utility.yul\":2139:2140   */\n      0x00\n        /* \"#utility.yul\":2128:2137   */\n      dup4\n        /* \"#utility.yul\":2124:2141   */\n      add\n        /* \"#utility.yul\":2117:2164   */\n      mstore\n        /* \"#utility.yul\":2181:2259   */\n      tag_98\n        /* \"#utility.yul\":2254:2258   */\n      dup2\n        /* \"#utility.yul\":2245:2251   */\n      dup5\n        /* \"#utility.yul\":2181:2259   */\n      tag_75\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":2173:2259   */\n      swap1\n      pop\n        /* \"#utility.yul\":1953:2266   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2272:2691   */\n    tag_49:\n        /* \"#utility.yul\":2438:2442   */\n      0x00\n        /* \"#utility.yul\":2476:2478   */\n      0x20\n        /* \"#utility.yul\":2465:2474   */\n      dup3\n        /* \"#utility.yul\":2461:2479   */\n      add\n        /* \"#utility.yul\":2453:2479   */\n      swap1\n      pop\n        /* \"#utility.yul\":2525:2534   */\n      dup2\n        /* \"#utility.yul\":2519:2523   */\n      dup2\n        /* \"#utility.yul\":2515:2535   */\n      sub\n        /* \"#utility.yul\":2511:2512   */\n      0x00\n        /* \"#utility.yul\":2500:2509   */\n      dup4\n        /* \"#utility.yul\":2496:2513   */\n      add\n        /* \"#utility.yul\":2489:2536   */\n      mstore\n        /* \"#utility.yul\":2553:2684   */\n      tag_100\n        /* \"#utility.yul\":2679:2683   */\n      dup2\n        /* \"#utility.yul\":2553:2684   */\n      tag_85\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":2545:2684   */\n      swap1\n      pop\n        /* \"#utility.yul\":2272:2691   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2697:3116   */\n    tag_58:\n        /* \"#utility.yul\":2863:2867   */\n      0x00\n        /* \"#utility.yul\":2901:2903   */\n      0x20\n        /* \"#utility.yul\":2890:2899   */\n      dup3\n        /* \"#utility.yul\":2886:2904   */\n      add\n        /* \"#utility.yul\":2878:2904   */\n      swap1\n      pop\n        /* \"#utility.yul\":2950:2959   */\n      dup2\n        /* \"#utility.yul\":2944:2948   */\n      dup2\n        /* \"#utility.yul\":2940:2960   */\n      sub\n        /* \"#utility.yul\":2936:2937   */\n      0x00\n        /* \"#utility.yul\":2925:2934   */\n      dup4\n        /* \"#utility.yul\":2921:2938   */\n      add\n        /* \"#utility.yul\":2914:2961   */\n      mstore\n        /* \"#utility.yul\":2978:3109   */\n      tag_102\n        /* \"#utility.yul\":3104:3108   */\n      dup2\n        /* \"#utility.yul\":2978:3109   */\n      tag_90\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":2970:3109   */\n      swap1\n      pop\n        /* \"#utility.yul\":2697:3116   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3203:3302   */\n    tag_78:\n        /* \"#utility.yul\":3255:3261   */\n      0x00\n        /* \"#utility.yul\":3289:3294   */\n      dup2\n        /* \"#utility.yul\":3283:3295   */\n      mload\n        /* \"#utility.yul\":3273:3295   */\n      swap1\n      pop\n        /* \"#utility.yul\":3203:3302   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3308:3477   */\n    tag_80:\n        /* \"#utility.yul\":3392:3403   */\n      0x00\n        /* \"#utility.yul\":3426:3432   */\n      dup3\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3433   */\n      mstore\n        /* \"#utility.yul\":3466:3470   */\n      0x20\n        /* \"#utility.yul\":3461:3464   */\n      dup3\n        /* \"#utility.yul\":3457:3471   */\n      add\n        /* \"#utility.yul\":3442:3471   */\n      swap1\n      pop\n        /* \"#utility.yul\":3308:3477   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3483:3579   */\n    tag_74:\n        /* \"#utility.yul\":3520:3527   */\n      0x00\n        /* \"#utility.yul\":3549:3573   */\n      tag_108\n        /* \"#utility.yul\":3567:3572   */\n      dup3\n        /* \"#utility.yul\":3549:3573   */\n      tag_109\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":3538:3573   */\n      swap1\n      pop\n        /* \"#utility.yul\":3483:3579   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3585:3711   */\n    tag_109:\n        /* \"#utility.yul\":3622:3629   */\n      0x00\n        /* \"#utility.yul\":3662:3704   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3655:3660   */\n      dup3\n        /* \"#utility.yul\":3651:3705   */\n      and\n        /* \"#utility.yul\":3640:3705   */\n      swap1\n      pop\n        /* \"#utility.yul\":3585:3711   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3717:4024   */\n    tag_82:\n        /* \"#utility.yul\":3785:3786   */\n      0x00\n        /* \"#utility.yul\":3795:3908   */\n    tag_112:\n        /* \"#utility.yul\":3809:3815   */\n      dup4\n        /* \"#utility.yul\":3806:3807   */\n      dup2\n        /* \"#utility.yul\":3803:3816   */\n      lt\n        /* \"#utility.yul\":3795:3908   */\n      iszero\n      tag_114\n      jumpi\n        /* \"#utility.yul\":3894:3895   */\n      dup1\n        /* \"#utility.yul\":3889:3892   */\n      dup3\n        /* \"#utility.yul\":3885:3896   */\n      add\n        /* \"#utility.yul\":3879:3897   */\n      mload\n        /* \"#utility.yul\":3875:3876   */\n      dup2\n        /* \"#utility.yul\":3870:3873   */\n      dup5\n        /* \"#utility.yul\":3866:3877   */\n      add\n        /* \"#utility.yul\":3859:3898   */\n      mstore\n        /* \"#utility.yul\":3831:3833   */\n      0x20\n        /* \"#utility.yul\":3828:3829   */\n      dup2\n        /* \"#utility.yul\":3824:3834   */\n      add\n        /* \"#utility.yul\":3819:3834   */\n      swap1\n      pop\n        /* \"#utility.yul\":3795:3908   */\n      jump(tag_112)\n    tag_114:\n        /* \"#utility.yul\":3926:3932   */\n      dup4\n        /* \"#utility.yul\":3923:3924   */\n      dup2\n        /* \"#utility.yul\":3920:3933   */\n      gt\n        /* \"#utility.yul\":3917:4018   */\n      iszero\n      tag_115\n      jumpi\n        /* \"#utility.yul\":4006:4007   */\n      0x00\n        /* \"#utility.yul\":3997:4003   */\n      dup5\n        /* \"#utility.yul\":3992:3995   */\n      dup5\n        /* \"#utility.yul\":3988:4004   */\n      add\n        /* \"#utility.yul\":3981:4008   */\n      mstore\n        /* \"#utility.yul\":3917:4018   */\n    tag_115:\n        /* \"#utility.yul\":3766:4024   */\n      pop\n        /* \"#utility.yul\":3717:4024   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4153:4270   */\n    tag_69:\n        /* \"#utility.yul\":4262:4263   */\n      0x00\n        /* \"#utility.yul\":4259:4260   */\n      dup1\n        /* \"#utility.yul\":4252:4264   */\n      revert\n        /* \"#utility.yul\":4276:4378   */\n    tag_84:\n        /* \"#utility.yul\":4317:4323   */\n      0x00\n        /* \"#utility.yul\":4368:4370   */\n      0x1f\n        /* \"#utility.yul\":4364:4371   */\n      not\n        /* \"#utility.yul\":4359:4361   */\n      0x1f\n        /* \"#utility.yul\":4352:4357   */\n      dup4\n        /* \"#utility.yul\":4348:4362   */\n      add\n        /* \"#utility.yul\":4344:4372   */\n      and\n        /* \"#utility.yul\":4334:4372   */\n      swap1\n      pop\n        /* \"#utility.yul\":4276:4378   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4384:4609   */\n    tag_89:\n        /* \"#utility.yul\":4524:4558   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":4520:4521   */\n      0x00\n        /* \"#utility.yul\":4512:4518   */\n      dup3\n        /* \"#utility.yul\":4508:4522   */\n      add\n        /* \"#utility.yul\":4501:4559   */\n      mstore\n        /* \"#utility.yul\":4593:4601   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4588:4590   */\n      0x20\n        /* \"#utility.yul\":4580:4586   */\n      dup3\n        /* \"#utility.yul\":4576:4591   */\n      add\n        /* \"#utility.yul\":4569:4602   */\n      mstore\n        /* \"#utility.yul\":4384:4609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4615:4797   */\n    tag_94:\n        /* \"#utility.yul\":4755:4789   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":4751:4752   */\n      0x00\n        /* \"#utility.yul\":4743:4749   */\n      dup3\n        /* \"#utility.yul\":4739:4753   */\n      add\n        /* \"#utility.yul\":4732:4790   */\n      mstore\n        /* \"#utility.yul\":4615:4797   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4803:4925   */\n    tag_65:\n        /* \"#utility.yul\":4876:4900   */\n      tag_123\n        /* \"#utility.yul\":4894:4899   */\n      dup2\n        /* \"#utility.yul\":4876:4900   */\n      tag_74\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":4869:4874   */\n      dup2\n        /* \"#utility.yul\":4866:4901   */\n      eq\n        /* \"#utility.yul\":4856:4919   */\n      tag_124\n      jumpi\n        /* \"#utility.yul\":4915:4916   */\n      0x00\n        /* \"#utility.yul\":4912:4913   */\n      dup1\n        /* \"#utility.yul\":4905:4917   */\n      revert\n        /* \"#utility.yul\":4856:4919   */\n    tag_124:\n        /* \"#utility.yul\":4803:4925   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220faa4a4cd8a4077aad39df8f90a3d4a6c480a92d2bfd084c7566aa44f879a4b1b64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": 50,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 58,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6105e88061010d6000396000f3fe6080604052600436106100705760003560e01c80638da5cb5b1161004e5780638da5cb5b146100c1578063d820d0db146100ec578063f2fde38b146100f6578063fe773fca1461011f57610070565b8063381b02c914610075578063715018a61461007f578063823ffaa214610096575b600080fd5b61007d610129565b005b34801561008b57600080fd5b5061009461012b565b005b3480156100a257600080fd5b506100ab61013f565b6040516100b8919061042a565b60405180910390f35b3480156100cd57600080fd5b506100d6610144565b6040516100e3919061040f565b60405180910390f35b6100f461016d565b005b34801561010257600080fd5b5061011d60048036038101906101189190610354565b61016f565b005b6101276101f3565b005b565b6101336101f5565b61013d6000610273565b565b606090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b565b6101776101f5565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156101e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101de9061044c565b60405180910390fd5b6101f081610273565b50565b565b6101fd610337565b73ffffffffffffffffffffffffffffffffffffffff1661021b610144565b73ffffffffffffffffffffffffffffffffffffffff1614610271576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102689061046c565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b60008135905061034e8161059b565b92915050565b60006020828403121561036a5761036961050d565b5b60006103788482850161033f565b91505092915050565b61038a816104a8565b82525050565b600061039b8261048c565b6103a58185610497565b93506103b58185602086016104da565b6103be81610512565b840191505092915050565b60006103d6602683610497565b91506103e182610523565b604082019050919050565b60006103f9602083610497565b915061040482610572565b602082019050919050565b60006020820190506104246000830184610381565b92915050565b600060208201905081810360008301526104448184610390565b905092915050565b60006020820190508181036000830152610465816103c9565b9050919050565b60006020820190508181036000830152610485816103ec565b9050919050565b600081519050919050565b600082825260208201905092915050565b60006104b3826104ba565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b838110156104f85780820151818401526020810190506104dd565b83811115610507576000848401525b50505050565b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6105a4816104a8565b81146105af57600080fd5b5056fea2646970667358221220faa4a4cd8a4077aad39df8f90a3d4a6c480a92d2bfd084c7566aa44f879a4b1b64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D PUSH2 0x22 PUSH2 0x32 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xFE JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x5E8 DUP1 PUSH2 0x10D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0xD820D0DB EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0xFE773FCA EQ PUSH2 0x11F JUMPI PUSH2 0x70 JUMP JUMPDEST DUP1 PUSH4 0x381B02C9 EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0x823FFAA2 EQ PUSH2 0x96 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D PUSH2 0x129 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x94 PUSH2 0x12B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0x13F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x42A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD6 PUSH2 0x144 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x40F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF4 PUSH2 0x16D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x102 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x118 SWAP2 SWAP1 PUSH2 0x354 JUMP JUMPDEST PUSH2 0x16F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x127 PUSH2 0x1F3 JUMP JUMPDEST STOP JUMPDEST JUMP JUMPDEST PUSH2 0x133 PUSH2 0x1F5 JUMP JUMPDEST PUSH2 0x13D PUSH1 0x0 PUSH2 0x273 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x177 PUSH2 0x1F5 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DE SWAP1 PUSH2 0x44C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1F0 DUP2 PUSH2 0x273 JUMP JUMPDEST POP JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x337 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x21B PUSH2 0x144 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x271 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x268 SWAP1 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x34E DUP2 PUSH2 0x59B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x36A JUMPI PUSH2 0x369 PUSH2 0x50D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x378 DUP5 DUP3 DUP6 ADD PUSH2 0x33F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x38A DUP2 PUSH2 0x4A8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39B DUP3 PUSH2 0x48C JUMP JUMPDEST PUSH2 0x3A5 DUP2 DUP6 PUSH2 0x497 JUMP JUMPDEST SWAP4 POP PUSH2 0x3B5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x4DA JUMP JUMPDEST PUSH2 0x3BE DUP2 PUSH2 0x512 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D6 PUSH1 0x26 DUP4 PUSH2 0x497 JUMP JUMPDEST SWAP2 POP PUSH2 0x3E1 DUP3 PUSH2 0x523 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F9 PUSH1 0x20 DUP4 PUSH2 0x497 JUMP JUMPDEST SWAP2 POP PUSH2 0x404 DUP3 PUSH2 0x572 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x424 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x381 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x444 DUP2 DUP5 PUSH2 0x390 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x465 DUP2 PUSH2 0x3C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x485 DUP2 PUSH2 0x3EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B3 DUP3 PUSH2 0x4BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4F8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4DD JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x507 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x5A4 DUP2 PUSH2 0x4A8 JUMP JUMPDEST DUP2 EQ PUSH2 0x5AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL LOG4 LOG4 0xCD DUP11 BLOCKHASH PUSH24 0xAAD39DF8F90A3D4A6C480A92D2BFD084C7566AA44F879A4B SHL PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "220:1677:2:-:0;;;;;;;;;;;;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;220:1677:2;;640:96:1;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;220:1677:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_54": {
									"entryPoint": 501,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": 823,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 627,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@fetchRawDataMutations_160": {
									"entryPoint": 319,
									"id": 160,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@generateInference_172": {
									"entryPoint": 499,
									"id": 172,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_40": {
									"entryPoint": 324,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 299,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setupReplicationEnv_164": {
									"entryPoint": 365,
									"id": 164,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 367,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@vouchCorrectness_168": {
									"entryPoint": 297,
									"id": 168,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 831,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 852,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 912,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 969,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1004,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1039,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1066,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1100,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1132,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1164,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1175,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1192,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1210,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 1242,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1293,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1298,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 1315,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 1394,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1435,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4928:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:3",
														"type": ""
													}
												],
												"src": "7:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:3"
															},
															"nodeType": "YulIf",
															"src": "228:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:3",
														"type": ""
													}
												],
												"src": "152:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "552:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "569:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "592:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "574:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "574:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "562:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "562:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "562:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "540:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "547:3:3",
														"type": ""
													}
												],
												"src": "487:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "703:272:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "713:53:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "760:5:3"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "727:32:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "727:39:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "717:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "775:78:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "841:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "846:6:3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "782:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "782:71:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "775:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "888:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "895:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "884:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "884:16:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "902:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "907:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "862:21:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "862:52:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "862:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "923:46:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "934:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "961:6:3"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "939:21:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:29:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "930:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "930:39:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "923:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "684:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "691:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "699:3:3",
														"type": ""
													}
												],
												"src": "611:364:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1127:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1137:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1203:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1208:2:3",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1144:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1144:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1137:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1309:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "1220:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1220:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1220:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1322:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1333:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1338:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1329:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1329:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1322:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1115:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1123:3:3",
														"type": ""
													}
												],
												"src": "981:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1499:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1509:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1575:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1580:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1516:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1516:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1509:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1681:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "1592:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1592:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1592:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1694:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1705:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1710:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1701:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1701:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1694:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1487:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1495:3:3",
														"type": ""
													}
												],
												"src": "1353:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1823:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1833:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1845:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1856:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1841:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1841:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1833:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1913:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1926:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1937:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1922:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1922:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1869:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1869:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1869:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1795:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1807:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1818:4:3",
														"type": ""
													}
												],
												"src": "1725:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2071:195:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2081:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2093:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2104:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2089:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2089:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2081:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2128:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2139:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2124:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2124:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2147:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2153:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2143:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2143:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2117:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2117:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2117:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2173:86:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2245:6:3"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2254:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2181:63:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2181:78:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2173:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2043:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2055:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2066:4:3",
														"type": ""
													}
												],
												"src": "1953:313:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2443:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2453:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2465:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2476:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2461:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2461:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2453:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2500:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2511:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2496:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2496:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2519:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2525:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2515:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2515:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2489:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2489:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2489:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2545:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2679:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2553:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2553:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2545:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2423:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2438:4:3",
														"type": ""
													}
												],
												"src": "2272:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2868:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2878:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2890:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2901:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2886:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2886:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2878:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2925:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2936:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2921:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2921:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2944:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2950:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2940:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2940:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2914:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2914:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2914:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2970:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3104:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2978:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2978:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2970:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2848:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2863:4:3",
														"type": ""
													}
												],
												"src": "2697:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3162:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3172:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3188:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3182:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3182:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "3172:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3155:6:3",
														"type": ""
													}
												],
												"src": "3122:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3262:40:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3273:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3289:5:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3283:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3283:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3273:6:3"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3245:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3255:6:3",
														"type": ""
													}
												],
												"src": "3203:99:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3404:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3426:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3414:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3414:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3442:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3461:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3466:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3457:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3457:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3442:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3376:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3381:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3392:11:3",
														"type": ""
													}
												],
												"src": "3308:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3528:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3538:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3567:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3549:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3549:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3538:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3510:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3520:7:3",
														"type": ""
													}
												],
												"src": "3483:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3630:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3640:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3655:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3662:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3651:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3651:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3640:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3612:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3622:7:3",
														"type": ""
													}
												],
												"src": "3585:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3766:258:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3776:10:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3785:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3780:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3845:63:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "3870:3:3"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3875:1:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3866:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3866:11:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "3889:3:3"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3894:1:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3885:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3885:11:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3879:5:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3879:18:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3859:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3859:39:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3859:39:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3806:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3809:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3803:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3803:13:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3817:19:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3819:15:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3828:1:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3831:2:3",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3824:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3824:10:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3819:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3799:3:3",
																"statements": []
															},
															"src": "3795:113:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3942:76:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "3992:3:3"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "3997:6:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3988:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3988:16:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4006:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3981:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3981:27:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3981:27:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3923:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3926:6:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3920:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3920:13:3"
															},
															"nodeType": "YulIf",
															"src": "3917:101:3"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3748:3:3",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "3753:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3758:6:3",
														"type": ""
													}
												],
												"src": "3717:307:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4119:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4136:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4139:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4129:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4129:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4129:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "4030:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4242:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4259:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4262:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4252:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4252:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4252:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "4153:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4324:54:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4334:38:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4352:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4359:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4348:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4348:14:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4368:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4364:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4364:7:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4344:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4344:28:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4334:6:3"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4307:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4317:6:3",
														"type": ""
													}
												],
												"src": "4276:102:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4490:119:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4512:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4520:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4508:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4508:14:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4524:34:3",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4501:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4501:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4501:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4580:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4588:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4576:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4576:15:3"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4593:8:3",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4569:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4569:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4569:33:3"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4482:6:3",
														"type": ""
													}
												],
												"src": "4384:225:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4721:76:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4743:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4751:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4739:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4739:14:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4755:34:3",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4732:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4732:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4732:58:3"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4713:6:3",
														"type": ""
													}
												],
												"src": "4615:182:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4846:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4903:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4912:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4915:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4905:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4905:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4905:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4869:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4894:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4876:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4876:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4866:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4866:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4859:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4859:43:3"
															},
															"nodeType": "YulIf",
															"src": "4856:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4839:5:3",
														"type": ""
													}
												],
												"src": "4803:122:3"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100705760003560e01c80638da5cb5b1161004e5780638da5cb5b146100c1578063d820d0db146100ec578063f2fde38b146100f6578063fe773fca1461011f57610070565b8063381b02c914610075578063715018a61461007f578063823ffaa214610096575b600080fd5b61007d610129565b005b34801561008b57600080fd5b5061009461012b565b005b3480156100a257600080fd5b506100ab61013f565b6040516100b8919061042a565b60405180910390f35b3480156100cd57600080fd5b506100d6610144565b6040516100e3919061040f565b60405180910390f35b6100f461016d565b005b34801561010257600080fd5b5061011d60048036038101906101189190610354565b61016f565b005b6101276101f3565b005b565b6101336101f5565b61013d6000610273565b565b606090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b565b6101776101f5565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156101e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101de9061044c565b60405180910390fd5b6101f081610273565b50565b565b6101fd610337565b73ffffffffffffffffffffffffffffffffffffffff1661021b610144565b73ffffffffffffffffffffffffffffffffffffffff1614610271576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102689061046c565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b60008135905061034e8161059b565b92915050565b60006020828403121561036a5761036961050d565b5b60006103788482850161033f565b91505092915050565b61038a816104a8565b82525050565b600061039b8261048c565b6103a58185610497565b93506103b58185602086016104da565b6103be81610512565b840191505092915050565b60006103d6602683610497565b91506103e182610523565b604082019050919050565b60006103f9602083610497565b915061040482610572565b602082019050919050565b60006020820190506104246000830184610381565b92915050565b600060208201905081810360008301526104448184610390565b905092915050565b60006020820190508181036000830152610465816103c9565b9050919050565b60006020820190508181036000830152610485816103ec565b9050919050565b600081519050919050565b600082825260208201905092915050565b60006104b3826104ba565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b838110156104f85780820151818401526020810190506104dd565b83811115610507576000848401525b50505050565b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6105a4816104a8565b81146105af57600080fd5b5056fea2646970667358221220faa4a4cd8a4077aad39df8f90a3d4a6c480a92d2bfd084c7566aa44f879a4b1b64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0xD820D0DB EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0xFE773FCA EQ PUSH2 0x11F JUMPI PUSH2 0x70 JUMP JUMPDEST DUP1 PUSH4 0x381B02C9 EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0x823FFAA2 EQ PUSH2 0x96 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D PUSH2 0x129 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x94 PUSH2 0x12B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0x13F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x42A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD6 PUSH2 0x144 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x40F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF4 PUSH2 0x16D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x102 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x118 SWAP2 SWAP1 PUSH2 0x354 JUMP JUMPDEST PUSH2 0x16F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x127 PUSH2 0x1F3 JUMP JUMPDEST STOP JUMPDEST JUMP JUMPDEST PUSH2 0x133 PUSH2 0x1F5 JUMP JUMPDEST PUSH2 0x13D PUSH1 0x0 PUSH2 0x273 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x177 PUSH2 0x1F5 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DE SWAP1 PUSH2 0x44C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1F0 DUP2 PUSH2 0x273 JUMP JUMPDEST POP JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x337 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x21B PUSH2 0x144 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x271 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x268 SWAP1 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x34E DUP2 PUSH2 0x59B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x36A JUMPI PUSH2 0x369 PUSH2 0x50D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x378 DUP5 DUP3 DUP6 ADD PUSH2 0x33F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x38A DUP2 PUSH2 0x4A8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39B DUP3 PUSH2 0x48C JUMP JUMPDEST PUSH2 0x3A5 DUP2 DUP6 PUSH2 0x497 JUMP JUMPDEST SWAP4 POP PUSH2 0x3B5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x4DA JUMP JUMPDEST PUSH2 0x3BE DUP2 PUSH2 0x512 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D6 PUSH1 0x26 DUP4 PUSH2 0x497 JUMP JUMPDEST SWAP2 POP PUSH2 0x3E1 DUP3 PUSH2 0x523 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F9 PUSH1 0x20 DUP4 PUSH2 0x497 JUMP JUMPDEST SWAP2 POP PUSH2 0x404 DUP3 PUSH2 0x572 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x424 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x381 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x444 DUP2 DUP5 PUSH2 0x390 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x465 DUP2 PUSH2 0x3C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x485 DUP2 PUSH2 0x3EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B3 DUP3 PUSH2 0x4BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4F8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4DD JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x507 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x5A4 DUP2 PUSH2 0x4A8 JUMP JUMPDEST DUP2 EQ PUSH2 0x5AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL LOG4 LOG4 0xCD DUP11 BLOCKHASH PUSH24 0xAAD39DF8F90A3D4A6C480A92D2BFD084C7566AA44F879A4B SHL PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "220:1677:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1391:169;;;:::i;:::-;;1831:101:0;;;;;;;;;;;;;:::i;:::-;;872:97:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1192:191:2;;;:::i;:::-;;2081:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1568:65:2;;;:::i;:::-;;1391:169;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;872:97:2:-;928:29;872:97;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;1192:191:2:-;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1568:65:2:-;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;640:96:1:-;693:7;719:10;712:17;;640:96;:::o;7:139:3:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:118::-;574:24;592:5;574:24;:::i;:::-;569:3;562:37;487:118;;:::o;611:364::-;699:3;727:39;760:5;727:39;:::i;:::-;782:71;846:6;841:3;782:71;:::i;:::-;775:78;;862:52;907:6;902:3;895:4;888:5;884:16;862:52;:::i;:::-;939:29;961:6;939:29;:::i;:::-;934:3;930:39;923:46;;703:272;611:364;;;;:::o;981:366::-;1123:3;1144:67;1208:2;1203:3;1144:67;:::i;:::-;1137:74;;1220:93;1309:3;1220:93;:::i;:::-;1338:2;1333:3;1329:12;1322:19;;981:366;;;:::o;1353:::-;1495:3;1516:67;1580:2;1575:3;1516:67;:::i;:::-;1509:74;;1592:93;1681:3;1592:93;:::i;:::-;1710:2;1705:3;1701:12;1694:19;;1353:366;;;:::o;1725:222::-;1818:4;1856:2;1845:9;1841:18;1833:26;;1869:71;1937:1;1926:9;1922:17;1913:6;1869:71;:::i;:::-;1725:222;;;;:::o;1953:313::-;2066:4;2104:2;2093:9;2089:18;2081:26;;2153:9;2147:4;2143:20;2139:1;2128:9;2124:17;2117:47;2181:78;2254:4;2245:6;2181:78;:::i;:::-;2173:86;;1953:313;;;;:::o;2272:419::-;2438:4;2476:2;2465:9;2461:18;2453:26;;2525:9;2519:4;2515:20;2511:1;2500:9;2496:17;2489:47;2553:131;2679:4;2553:131;:::i;:::-;2545:139;;2272:419;;;:::o;2697:::-;2863:4;2901:2;2890:9;2886:18;2878:26;;2950:9;2944:4;2940:20;2936:1;2925:9;2921:17;2914:47;2978:131;3104:4;2978:131;:::i;:::-;2970:139;;2697:419;;;:::o;3203:99::-;3255:6;3289:5;3283:12;3273:22;;3203:99;;;:::o;3308:169::-;3392:11;3426:6;3421:3;3414:19;3466:4;3461:3;3457:14;3442:29;;3308:169;;;;:::o;3483:96::-;3520:7;3549:24;3567:5;3549:24;:::i;:::-;3538:35;;3483:96;;;:::o;3585:126::-;3622:7;3662:42;3655:5;3651:54;3640:65;;3585:126;;;:::o;3717:307::-;3785:1;3795:113;3809:6;3806:1;3803:13;3795:113;;;3894:1;3889:3;3885:11;3879:18;3875:1;3870:3;3866:11;3859:39;3831:2;3828:1;3824:10;3819:15;;3795:113;;;3926:6;3923:1;3920:13;3917:101;;;4006:1;3997:6;3992:3;3988:16;3981:27;3917:101;3766:258;3717:307;;;:::o;4153:117::-;4262:1;4259;4252:12;4276:102;4317:6;4368:2;4364:7;4359:2;4352:5;4348:14;4344:28;4334:38;;4276:102;;;:::o;4384:225::-;4524:34;4520:1;4512:6;4508:14;4501:58;4593:8;4588:2;4580:6;4576:15;4569:33;4384:225;:::o;4615:182::-;4755:34;4751:1;4743:6;4739:14;4732:58;4615:182;:::o;4803:122::-;4876:24;4894:5;4876:24;:::i;:::-;4869:5;4866:35;4856:63;;4915:1;4912;4905:12;4856:63;4803:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "302400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"fetchRawDataMutations()": "infinite",
								"generateInference()": "186",
								"owner()": "2522",
								"renounceOwnership()": "30421",
								"setupReplicationEnv()": "142",
								"transferOwnership(address)": "30791",
								"vouchCorrectness()": "121"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 220,
									"end": 1897,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 220,
									"end": 1897,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 220,
									"end": 1897,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 220,
									"end": 1897,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 220,
									"end": 1897,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 220,
									"end": 1897,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 220,
									"end": 1897,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 1897,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 220,
									"end": 1897,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 1897,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 220,
									"end": 1897,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 220,
									"end": 1897,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 1897,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 220,
									"end": 1897,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 220,
									"end": 1897,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 220,
									"end": 1897,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 220,
									"end": 1897,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 220,
									"end": 1897,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 220,
									"end": 1897,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 1897,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 220,
									"end": 1897,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 1897,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 1897,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 220,
									"end": 1897,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 1897,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220faa4a4cd8a4077aad39df8f90a3d4a6c480a92d2bfd084c7566aa44f879a4b1b64736f6c63430008070033",
									".code": [
										{
											"begin": 220,
											"end": 1897,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "PUSH",
											"source": 2,
											"value": "D820D0DB"
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "PUSH",
											"source": 2,
											"value": "FE773FCA"
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "PUSH",
											"source": 2,
											"value": "381B02C9"
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "PUSH",
											"source": 2,
											"value": "823FFAA2"
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1897,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1560,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1391,
											"end": 1560,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1560,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1391,
											"end": 1560,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1391,
											"end": 1560,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1391,
											"end": 1560,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1391,
											"end": 1560,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1560,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 872,
											"end": 969,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 872,
											"end": 969,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 872,
											"end": 969,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 872,
											"end": 969,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 872,
											"end": 969,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 872,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 872,
											"end": 969,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 872,
											"end": 969,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 872,
											"end": 969,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 872,
											"end": 969,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 872,
											"end": 969,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 872,
											"end": 969,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 872,
											"end": 969,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 872,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 872,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 872,
											"end": 969,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 872,
											"end": 969,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 872,
											"end": 969,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 872,
											"end": 969,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 872,
											"end": 969,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 872,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 872,
											"end": 969,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 872,
											"end": 969,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 872,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 872,
											"end": 969,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 872,
											"end": 969,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 872,
											"end": 969,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 872,
											"end": 969,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 872,
											"end": 969,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 872,
											"end": 969,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 872,
											"end": 969,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 872,
											"end": 969,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 872,
											"end": 969,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 872,
											"end": 969,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1383,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1192,
											"end": 1383,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1383,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1192,
											"end": 1383,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1192,
											"end": 1383,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1192,
											"end": 1383,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1192,
											"end": 1383,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1383,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1633,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1568,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1568,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1568,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1568,
											"end": 1633,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1568,
											"end": 1633,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1568,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1568,
											"end": 1633,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1560,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1391,
											"end": 1560,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1560,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 872,
											"end": 969,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 872,
											"end": 969,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 928,
											"end": 957,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 872,
											"end": 969,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 872,
											"end": 969,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1192,
											"end": 1383,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1192,
											"end": 1383,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1383,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2263,
											"end": 2271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1568,
											"end": 1633,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1568,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1568,
											"end": 1633,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 605,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 487,
											"end": 605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 574,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 592,
											"end": 597,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 574,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 569,
											"end": 572,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 562,
											"end": 599,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 487,
											"end": 605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 487,
											"end": 605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 487,
											"end": 605,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 611,
											"end": 975,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 611,
											"end": 975,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 699,
											"end": 702,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 760,
											"end": 765,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 727,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 727,
											"end": 766,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 727,
											"end": 766,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 727,
											"end": 766,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 782,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 846,
											"end": 852,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 841,
											"end": 844,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 782,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 782,
											"end": 853,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 782,
											"end": 853,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 782,
											"end": 853,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 775,
											"end": 853,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 775,
											"end": 853,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 862,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 907,
											"end": 913,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 902,
											"end": 905,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 895,
											"end": 899,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 888,
											"end": 893,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 884,
											"end": 900,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 862,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 862,
											"end": 914,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 862,
											"end": 914,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 862,
											"end": 914,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 939,
											"end": 968,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 961,
											"end": 967,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 939,
											"end": 968,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 939,
											"end": 968,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 939,
											"end": 968,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 939,
											"end": 968,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 934,
											"end": 937,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 930,
											"end": 969,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 923,
											"end": 969,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 923,
											"end": 969,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 703,
											"end": 975,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 611,
											"end": 975,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 611,
											"end": 975,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 611,
											"end": 975,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 611,
											"end": 975,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 611,
											"end": 975,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 981,
											"end": 1347,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 981,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1123,
											"end": 1126,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1144,
											"end": 1211,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1208,
											"end": 1210,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1203,
											"end": 1206,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1144,
											"end": 1211,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1144,
											"end": 1211,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1144,
											"end": 1211,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1144,
											"end": 1211,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1137,
											"end": 1211,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1137,
											"end": 1211,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1220,
											"end": 1313,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1309,
											"end": 1312,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1220,
											"end": 1313,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1220,
											"end": 1313,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1220,
											"end": 1313,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1220,
											"end": 1313,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1338,
											"end": 1340,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1333,
											"end": 1336,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1329,
											"end": 1341,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1322,
											"end": 1341,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1322,
											"end": 1341,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 981,
											"end": 1347,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 981,
											"end": 1347,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 981,
											"end": 1347,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 981,
											"end": 1347,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1353,
											"end": 1719,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1353,
											"end": 1719,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1495,
											"end": 1498,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1516,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1580,
											"end": 1582,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1575,
											"end": 1578,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1516,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1516,
											"end": 1583,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1516,
											"end": 1583,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1516,
											"end": 1583,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1583,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1583,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1592,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1681,
											"end": 1684,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1592,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1592,
											"end": 1685,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1592,
											"end": 1685,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1592,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1712,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1705,
											"end": 1708,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1701,
											"end": 1713,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1694,
											"end": 1713,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1694,
											"end": 1713,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1353,
											"end": 1719,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1353,
											"end": 1719,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1353,
											"end": 1719,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1353,
											"end": 1719,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 1822,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1856,
											"end": 1858,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1845,
											"end": 1854,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1841,
											"end": 1859,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1833,
											"end": 1859,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1833,
											"end": 1859,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1869,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1937,
											"end": 1938,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1926,
											"end": 1935,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 1939,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1913,
											"end": 1919,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1869,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1869,
											"end": 1940,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1869,
											"end": 1940,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1869,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1953,
											"end": 2266,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1953,
											"end": 2266,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2066,
											"end": 2070,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2104,
											"end": 2106,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2093,
											"end": 2102,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2089,
											"end": 2107,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2107,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2107,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2153,
											"end": 2162,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2147,
											"end": 2151,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2143,
											"end": 2163,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2139,
											"end": 2140,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2128,
											"end": 2137,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2124,
											"end": 2141,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2117,
											"end": 2164,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 2254,
											"end": 2258,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2251,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2181,
											"end": 2259,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2181,
											"end": 2259,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 2181,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2173,
											"end": 2259,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2173,
											"end": 2259,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1953,
											"end": 2266,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1953,
											"end": 2266,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1953,
											"end": 2266,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1953,
											"end": 2266,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1953,
											"end": 2266,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2272,
											"end": 2691,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 2272,
											"end": 2691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2438,
											"end": 2442,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2476,
											"end": 2478,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2465,
											"end": 2474,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2461,
											"end": 2479,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2453,
											"end": 2479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2453,
											"end": 2479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2525,
											"end": 2534,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2519,
											"end": 2523,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2515,
											"end": 2535,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2511,
											"end": 2512,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2500,
											"end": 2509,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2513,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2489,
											"end": 2536,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2679,
											"end": 2683,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 2553,
											"end": 2684,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2553,
											"end": 2684,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2553,
											"end": 2684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2545,
											"end": 2684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2545,
											"end": 2684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2272,
											"end": 2691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2272,
											"end": 2691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2272,
											"end": 2691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2272,
											"end": 2691,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2697,
											"end": 3116,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 2697,
											"end": 3116,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2863,
											"end": 2867,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2901,
											"end": 2903,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2890,
											"end": 2899,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2886,
											"end": 2904,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2904,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2904,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2950,
											"end": 2959,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2944,
											"end": 2948,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2960,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2936,
											"end": 2937,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2925,
											"end": 2934,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2921,
											"end": 2938,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2914,
											"end": 2961,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2978,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 3104,
											"end": 3108,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2978,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2978,
											"end": 3109,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2978,
											"end": 3109,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 2978,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2970,
											"end": 3109,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2970,
											"end": 3109,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 3116,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 3116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 3116,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 3116,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3203,
											"end": 3302,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 3203,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3255,
											"end": 3261,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3289,
											"end": 3294,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3283,
											"end": 3295,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3273,
											"end": 3295,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3273,
											"end": 3295,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3203,
											"end": 3302,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3203,
											"end": 3302,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3203,
											"end": 3302,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3203,
											"end": 3302,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3308,
											"end": 3477,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3308,
											"end": 3477,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3392,
											"end": 3403,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3426,
											"end": 3432,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3414,
											"end": 3433,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3466,
											"end": 3470,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3461,
											"end": 3464,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3457,
											"end": 3471,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3471,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3471,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3308,
											"end": 3477,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3308,
											"end": 3477,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3308,
											"end": 3477,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3308,
											"end": 3477,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3308,
											"end": 3477,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3483,
											"end": 3579,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 3483,
											"end": 3579,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3549,
											"end": 3573,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 3567,
											"end": 3572,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3549,
											"end": 3573,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 3549,
											"end": 3573,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3549,
											"end": 3573,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 3549,
											"end": 3573,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3538,
											"end": 3573,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3538,
											"end": 3573,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3483,
											"end": 3579,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3483,
											"end": 3579,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3483,
											"end": 3579,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3483,
											"end": 3579,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3585,
											"end": 3711,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 3585,
											"end": 3711,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3622,
											"end": 3629,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3662,
											"end": 3704,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3655,
											"end": 3660,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3651,
											"end": 3705,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3640,
											"end": 3705,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3640,
											"end": 3705,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3585,
											"end": 3711,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3585,
											"end": 3711,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3585,
											"end": 3711,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3585,
											"end": 3711,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3717,
											"end": 4024,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 3717,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3785,
											"end": 3786,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3795,
											"end": 3908,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 3795,
											"end": 3908,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3815,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3806,
											"end": 3807,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3803,
											"end": 3816,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3795,
											"end": 3908,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3795,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 3795,
											"end": 3908,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3894,
											"end": 3895,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3889,
											"end": 3892,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3885,
											"end": 3896,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3879,
											"end": 3897,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3875,
											"end": 3876,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3870,
											"end": 3873,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3866,
											"end": 3877,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3859,
											"end": 3898,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3831,
											"end": 3833,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3828,
											"end": 3829,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3824,
											"end": 3834,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3819,
											"end": 3834,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3819,
											"end": 3834,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3795,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 3795,
											"end": 3908,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3795,
											"end": 3908,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 3795,
											"end": 3908,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3926,
											"end": 3932,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3923,
											"end": 3924,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3920,
											"end": 3933,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3917,
											"end": 4018,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3917,
											"end": 4018,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 3917,
											"end": 4018,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4006,
											"end": 4007,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3992,
											"end": 3995,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4004,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3981,
											"end": 4008,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3917,
											"end": 4018,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 3917,
											"end": 4018,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3766,
											"end": 4024,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3717,
											"end": 4024,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3717,
											"end": 4024,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3717,
											"end": 4024,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3717,
											"end": 4024,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4153,
											"end": 4270,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 4153,
											"end": 4270,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4262,
											"end": 4263,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4259,
											"end": 4260,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4252,
											"end": 4264,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4378,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 4276,
											"end": 4378,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4317,
											"end": 4323,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4368,
											"end": 4370,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 4364,
											"end": 4371,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 4359,
											"end": 4361,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 4352,
											"end": 4357,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4344,
											"end": 4372,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4334,
											"end": 4372,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4334,
											"end": 4372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4378,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4378,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4378,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4378,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4384,
											"end": 4609,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 4384,
											"end": 4609,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4524,
											"end": 4558,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 4520,
											"end": 4521,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4512,
											"end": 4518,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4508,
											"end": 4522,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4501,
											"end": 4559,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4593,
											"end": 4601,
											"name": "PUSH",
											"source": 3,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4588,
											"end": 4590,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4580,
											"end": 4586,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4576,
											"end": 4591,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4569,
											"end": 4602,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4384,
											"end": 4609,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4384,
											"end": 4609,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4615,
											"end": 4797,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 4615,
											"end": 4797,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4755,
											"end": 4789,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 4751,
											"end": 4752,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4743,
											"end": 4749,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4739,
											"end": 4753,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4732,
											"end": 4790,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4615,
											"end": 4797,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4615,
											"end": 4797,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4803,
											"end": 4925,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 4803,
											"end": 4925,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4876,
											"end": 4900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 4894,
											"end": 4899,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4876,
											"end": 4900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 4876,
											"end": 4900,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4876,
											"end": 4900,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 4876,
											"end": 4900,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4869,
											"end": 4874,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4866,
											"end": 4901,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4856,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 4856,
											"end": 4919,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4915,
											"end": 4916,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4912,
											"end": 4913,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4905,
											"end": 4917,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4856,
											"end": 4919,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 4856,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4803,
											"end": 4925,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4803,
											"end": 4925,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"fetchRawDataMutations()": "823ffaa2",
							"generateInference()": "fe773fca",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setupReplicationEnv()": "d820d0db",
							"transferOwnership(address)": "f2fde38b",
							"vouchCorrectness()": "381b02c9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"fetchRawDataMutations\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"mutation_lambda\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"generateInference\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setupReplicationEnv\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vouchCorrectness\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Journal3.sol\":\"Journal3\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/Journal3.sol\":{\"keccak256\":\"0xa8f075cb3910fab45198a1018e828106fab508dfc798bedf1dd2879208a7ebd0\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://16b4f4e35c0146be8eeeb5a70fd769a74d014a35d376c7df63508c1862269a85\",\"dweb:/ipfs/QmVtDciUNm8cNzQMZW2eiMR3UXBXkyCE5AhNCSuywW5rG3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/Journal3.sol:Journal3",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 148,
								"contract": "contracts/Journal3.sol:Journal3",
								"label": "authors_gscholar_uid",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_struct(Author)142_storage)dyn_storage"
							},
							{
								"astId": 150,
								"contract": "contracts/Journal3.sol:Journal3",
								"label": "paper_metadata_ipfs_url",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 154,
								"contract": "contracts/Journal3.sol:Journal3",
								"label": "references",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_string_memory_ptr,t_address)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Author)142_storage)dyn_storage": {
								"base": "t_struct(Author)142_storage",
								"encoding": "dynamic_array",
								"label": "struct Author[]",
								"numberOfBytes": "32"
							},
							"t_mapping(t_string_memory_ptr,t_address)": {
								"encoding": "mapping",
								"key": "t_string_memory_ptr",
								"label": "mapping(string => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_memory_ptr": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Author)142_storage": {
								"encoding": "inplace",
								"label": "struct Author",
								"members": [
									{
										"astId": 139,
										"contract": "contracts/Journal3.sol:Journal3",
										"label": "author_gscholar_uid",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 141,
										"contract": "contracts/Journal3.sol:Journal3",
										"label": "author_pub_address",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 135,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 134,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								134
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							134
						]
					},
					"id": 135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 134,
							"linearizedBaseContracts": [
								134
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 120,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 119,
												"id": 122,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 134,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 129,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 128,
												"id": 131,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 134,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 135,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"contracts/Journal3.sol": {
				"ast": {
					"absolutePath": "contracts/Journal3.sol",
					"exportedSymbols": {
						"Author": [
							142
						],
						"Context": [
							134
						],
						"Journal3": [
							173
						],
						"Ownable": [
							112
						]
					},
					"id": 174,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 136,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:31:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 137,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 174,
							"sourceUnit": 113,
							"src": "74:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"canonicalName": "Author",
							"id": 142,
							"members": [
								{
									"constant": false,
									"id": 139,
									"mutability": "mutable",
									"name": "author_gscholar_uid",
									"nameLocation": "160:19:2",
									"nodeType": "VariableDeclaration",
									"scope": 142,
									"src": "153:26:2",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 138,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "153:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 141,
									"mutability": "mutable",
									"name": "author_pub_address",
									"nameLocation": "194:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 142,
									"src": "186:26:2",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 140,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "186:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "Author",
							"nameLocation": "139:6:2",
							"nodeType": "StructDefinition",
							"scope": 174,
							"src": "132:84:2",
							"visibility": "public"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 143,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "241:7:2"
									},
									"id": 144,
									"nodeType": "InheritanceSpecifier",
									"src": "241:7:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 173,
							"linearizedBaseContracts": [
								173,
								112,
								134
							],
							"name": "Journal3",
							"nameLocation": "229:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 148,
									"mutability": "mutable",
									"name": "authors_gscholar_uid",
									"nameLocation": "462:20:2",
									"nodeType": "VariableDeclaration",
									"scope": 173,
									"src": "453:29:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Author_$142_storage_$dyn_storage",
										"typeString": "struct Author[]"
									},
									"typeName": {
										"baseType": {
											"id": 146,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 145,
												"name": "Author",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 142,
												"src": "453:6:2"
											},
											"referencedDeclaration": 142,
											"src": "453:6:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Author_$142_storage_ptr",
												"typeString": "struct Author"
											}
										},
										"id": 147,
										"nodeType": "ArrayTypeName",
										"src": "453:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Author_$142_storage_$dyn_storage_ptr",
											"typeString": "struct Author[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 150,
									"mutability": "mutable",
									"name": "paper_metadata_ipfs_url",
									"nameLocation": "751:23:2",
									"nodeType": "VariableDeclaration",
									"scope": 173,
									"src": "744:30:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 149,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "744:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 154,
									"mutability": "mutable",
									"name": "references",
									"nameLocation": "808:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 173,
									"src": "783:35:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
										"typeString": "mapping(string => address)"
									},
									"typeName": {
										"id": 153,
										"keyType": {
											"id": 151,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "791:6:2",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"nodeType": "Mapping",
										"src": "783:24:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
											"typeString": "mapping(string => address)"
										},
										"valueType": {
											"id": 152,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "799:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "959:10:2",
										"statements": []
									},
									"functionSelector": "823ffaa2",
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fetchRawDataMutations",
									"nameLocation": "881:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "902:2:2"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "mutation_lambda",
												"nameLocation": "942:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "928:29:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 156,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "928:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "927:31:2"
									},
									"scope": 173,
									"src": "872:97:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "1238:145:2",
										"statements": []
									},
									"functionSelector": "d820d0db",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setupReplicationEnv",
									"nameLocation": "1201:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1220:2:2"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1238:0:2"
									},
									"scope": 173,
									"src": "1192:191:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "1434:126:2",
										"statements": []
									},
									"functionSelector": "381b02c9",
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "vouchCorrectness",
									"nameLocation": "1400:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1416:2:2"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1434:0:2"
									},
									"scope": 173,
									"src": "1391:169:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 171,
										"nodeType": "Block",
										"src": "1612:21:2",
										"statements": []
									},
									"functionSelector": "fe773fca",
									"id": 172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "generateInference",
									"nameLocation": "1577:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1594:2:2"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1612:0:2"
									},
									"scope": 173,
									"src": "1568:65:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 174,
							"src": "220:1677:2",
							"usedErrors": []
						}
					],
					"src": "39:1858:2"
				},
				"id": 2
			}
		}
	}
}